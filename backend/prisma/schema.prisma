// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     // "ADMIN" | "CERTIFIER" | "PROVIDER" | "MANUFACTURER"
  createdAt DateTime @default(now())

  // Relations
  certificationRequests CertificationRequest[]
  shipments            Shipment[]
  auditLogs            AuditLog[]
  inventoryItems       InventoryItem[]

  @@map("users")
}

model CertificationRequest {
  id          String   @id @default(uuid())
  companyName String
  productType String
  status      CertStatus @default(PENDING)
  submittedBy String
  user        User      @relation(fields: [submittedBy], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime @updatedAt

  @@map("certification_requests")
}

model Shipment {
  id          String   @id @default(uuid())
  product     String
  origin      String
  destination String
  status      ShipStatus
  certified   Boolean  @default(false)
  trackingId  String   @unique
  ownerId     String
  user        User     @relation(fields: [ownerId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("shipments")
}

model AuditLog {
  id          String   @id @default(uuid())
  type        String
  description String
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())

  @@map("audit_logs")
}

model InventoryItem {
  id          String   @id @default(uuid())
  productName String
  quantity    Int
  location    String
  halalCertified Boolean @default(false)
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("inventory_items")
}

enum Role {
  ADMIN
  CERTIFIER
  PROVIDER
  MANUFACTURER
}

enum CertStatus {
  PENDING
  APPROVED
  REJECTED
  EXPIRED
}

enum ShipStatus {
  CREATED
  IN_TRANSIT
  DELIVERED
  FAILED
}
