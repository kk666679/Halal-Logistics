version: '3.8'

services:
  api-gateway:
    build: ./microservices/api-gateway
    ports:
      - "3000:3000"
    environment:
      - INVENTORY_SERVICE_URL=http://inventory-service:3001
      - FREIGHT_BOOKING_SERVICE_URL=http://freight-booking:3002
      - FREIGHT_ORDER_SERVICE_URL=http://freight-order-management-service:3003
      - CARGO_TRACKING_SERVICE_URL=http://cargo-tracking-service:3004
    depends_on:
      - inventory-service
      - freight-booking
      - freight-order-management-service
      - cargo-tracking-service

  inventory-service:
    build: ./microservices/inventory-service
    ports:
      - "3001:3000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/inventory_db?schema=public
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - kafka

  freight-booking:
    build: ./microservices/freight-booking
    ports:
      - "3002:3000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/freight_db?schema=public
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - kafka

  freight-order-management-service:
    build: ./microservices/freight-order-management-service
    ports:
      - "3003:3000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/freight_order_db?schema=public
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - kafka

  cargo-tracking-service:
    build: ./microservices/cargo-tracking-service
    ports:
      - "3004:3000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/cargo_tracking_db?schema=public
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - kafka

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: default_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    command: >
      bash -c "
      kafka-topics --create --topic product-events --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 --if-not-exists &&
      kafka-topics --create --topic inventory-updates --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 --if-not-exists &&
      kafka-topics --create --topic quote-events --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 --if-not-exists &&
      kafka-topics --create --topic booking-events --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 --if-not-exists &&
      kafka-topics --create --topic shipment-events --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 --if-not-exists &&
      kafka-topics --create --topic tracking-events --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 --if-not-exists &&
      sleep infinity
      "
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

volumes:
  postgres_data:
